<component name="InspectionProjectProfileManager">
  <profile version="1.0">
    <option name="myName" value="Recalbox Default" />
    <inspection_tool class="ClangTidy" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="clangTidyChecks" value="*,-android-*,-bugprone-exception-escape,-cert-dcl16-c,-cert-dcl50-cpp,-cert-dcl59-cpp,-cert-env33-c,-clang-analyzer-*,-clang-diagnostic-*,-cppcoreguidelines-avoid-c-arrays,-cppcoreguidelines-avoid-magic-numbers,-cppcoreguidelines-macro-usage,-cppcoreguidelines-no-malloc,-cppcoreguidelines-non-private-member-variables-in-classes,-cppcoreguidelines-owning-memory,-cppcoreguidelines-pro-bounds-array-to-pointer-decay,-cppcoreguidelines-pro-bounds-constant-array-index,-cppcoreguidelines-pro-bounds-pointer-arithmetic,-cppcoreguidelines-pro-type-const-cast,-cppcoreguidelines-pro-type-cstyle-cast,-cppcoreguidelines-pro-type-reinterpret-cast,-cppcoreguidelines-pro-type-union-access,-cppcoreguidelines-pro-type-vararg,-cppcoreguidelines-special-member-functions,-fuchsia-*,-google-*,-hicpp-avoid-c-arrays,-hicpp-braces-around-statements,-hicpp-function-size,-hicpp-named-parameter,-hicpp-no-array-decay,-hicpp-no-assembler,-hicpp-no-malloc,-hicpp-special-member-functions,-hicpp-uppercase-literal-suffix,-hicpp-vararg,-llvm-*,-misc-definitions-in-headers,-misc-non-private-member-variables-in-classes,-misc-unused-using-decls,-modernize-avoid-c-arrays,-modernize-use-default-member-init,-modernize-use-using,-objc-*,-openmp-exception-escape,-readability-braces-around-statements,-readability-else-after-return,-readability-function-size,-readability-identifier-naming,-readability-isolate-declaration,-readability-magic-numbers,-readability-named-parameter,-readability-redundant-member-init,-readability-redundant-preprocessor,-readability-uppercase-literal-suffix,-zircon-*,google-default-arguments,google-explicit-constructor,google-runtime-operator,-modernize-use-auto,-hicpp-signed-bitwise,-hicpp-use-auto,-hicpp-use-emplace,-modernize-use-emplace,-modernize-pass-by-value,-cert-err58-cpp" />
    </inspection_tool>
    <inspection_tool class="OCUnusedClass" enabled="true" level="WEAK WARNING" enabled_by_default="true" />
    <inspection_tool class="OCUnusedGlobalDeclaration" enabled="true" level="WEAK WARNING" enabled_by_default="true" />
    <inspection_tool class="OCUnusedIncludeDirective" enabled="true" level="WEAK WARNING" enabled_by_default="true">
      <option name="showInHeaders" value="true" />
    </inspection_tool>
    <inspection_tool class="OCUnusedInstanceVariable" enabled="true" level="WEAK WARNING" enabled_by_default="true" />
    <inspection_tool class="OCUnusedMacro" enabled="true" level="WEAK WARNING" enabled_by_default="true" />
    <inspection_tool class="OCUnusedMethod" enabled="true" level="WEAK WARNING" enabled_by_default="true" />
    <inspection_tool class="OCUnusedProperty" enabled="true" level="WEAK WARNING" enabled_by_default="true" />
    <inspection_tool class="OCUnusedStruct" enabled="true" level="WEAK WARNING" enabled_by_default="true" />
    <inspection_tool class="OCUnusedTemplateParameter" enabled="true" level="WEAK WARNING" enabled_by_default="true" />
    <inspection_tool class="UnusedExpressionResult" enabled="true" level="WEAK WARNING" enabled_by_default="true" />
    <inspection_tool class="UnusedLocalVariable" enabled="true" level="WEAK WARNING" enabled_by_default="true" />
    <inspection_tool class="UnusedLocalization" enabled="true" level="WEAK WARNING" enabled_by_default="true" />
    <inspection_tool class="UnusedParameter" enabled="true" level="WEAK WARNING" enabled_by_default="true" />
    <inspection_tool class="UnusedValue" enabled="true" level="WEAK WARNING" enabled_by_default="true" />
  </profile>
</component>
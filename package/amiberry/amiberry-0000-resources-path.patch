diff --git a/src/driveclick.cpp b/src/driveclick.cpp
index 521b5d26..fa90e081 100644
--- a/src/driveclick.cpp
+++ b/src/driveclick.cpp
@@ -540,19 +540,19 @@ int driveclick_loadresource(struct drvsample* sp, int drivetype)
 		auto* s = sp + type;
 		switch (type) {
 		case 0:
-			sample = strdup("data/floppy_sounds/drive_click.wav");
+			sample = strdup("/usr/share/amiberry/data/floppy_sounds/drive_click.wav");
 			break;
 		case 1:
-			sample = strdup("data/floppy_sounds/drive_spin.wav");
+			sample = strdup("/usr/share/amiberry/data/floppy_sounds/drive_spin.wav");
 			break;
 		case 2:
-			sample = strdup("data/floppy_sounds/drive_spinnd.wav");
+			sample = strdup("/usr/share/amiberry/data/floppy_sounds/drive_spinnd.wav");
 			break;
 		case 3:
-			sample = strdup("data/floppy_sounds/drive_startup.wav");
+			sample = strdup("/usr/share/amiberry/data/floppy_sounds/drive_startup.wav");
 			break;
 		case 4:
-			sample = strdup("data/floppy_sounds/drive_snatch.wav");
+			sample = strdup("/usr/share/amiberry/data/floppy_sounds/drive_snatch.wav");
 			break;
 		default:
 			continue;
diff --git a/src/osdep/amiberry_filesys.cpp b/src/osdep/amiberry_filesys.cpp
index a8464956..a76d5534 100644
--- a/src/osdep/amiberry_filesys.cpp
+++ b/src/osdep/amiberry_filesys.cpp
@@ -136,6 +136,7 @@ std::string prefix_with_application_directory_path(std::string currentpath)
 
 std::string prefix_with_data_path(std::string filename)
 {
+  if (!filename.empty() && filename[0] == '/') return filename;
 #ifdef __MACH__
 	CFBundleRef mainBundle = CFBundleGetMainBundle();
 	if (mainBundle == NULL)
diff --git a/src/osdep/amiberry_gfx.cpp b/src/osdep/amiberry_gfx.cpp
index e11c51fc..e4b75aaa 100644
--- a/src/osdep/amiberry_gfx.cpp
+++ b/src/osdep/amiberry_gfx.cpp
@@ -2034,7 +2034,7 @@ int graphics_init(bool mousecapture)
 		}
 		check_error_sdl(mon->sdl_window == nullptr, "Unable to create window:");
 
-		auto* const icon_surface = IMG_Load(prefix_with_data_path("amiberry.png").c_str());
+		auto* const icon_surface = IMG_Load(prefix_with_data_path("/usr/share/amiberry/data/amiberry.png").c_str());
 		if (icon_surface != nullptr)
 		{
 			SDL_SetWindowIcon(mon->sdl_window, icon_surface);
diff --git a/src/osdep/gui/ControllerMap.cpp b/src/osdep/gui/ControllerMap.cpp
index a115f2fd..334e40a1 100644
--- a/src/osdep/gui/ControllerMap.cpp
+++ b/src/osdep/gui/ControllerMap.cpp
@@ -481,10 +481,10 @@ WatchJoystick(SDL_Joystick* joystick)
 	Uint32 alpha_ticks = 0;
 	SDL_JoystickID nJoystickID;
 
-	background_front_image = gcn::Image::load(prefix_with_data_path("controllermap.png"));
+	background_front_image = gcn::Image::load(prefix_with_data_path("/usr/share/amiberry/data/controllermap.png"));
 	background_front_icon = new gcn::Icon(background_front_image);
 
-	background_back_image = gcn::Image::load(prefix_with_data_path("controllermap_back.png"));
+	background_back_image = gcn::Image::load(prefix_with_data_path("/usr/share/amiberry/data/controllermap_back.png"));
 	background_back_icon = new gcn::Icon(background_back_image);
 
 #ifdef USE_DISPMANX
@@ -492,8 +492,8 @@ WatchJoystick(SDL_Joystick* joystick)
 #elif USE_OPENGL
 	//TODO need implementation
 #else
-	button = LoadTexture(sdl_renderer, prefix_with_data_path("button.png").c_str(), SDL_TRUE);
-	axis = LoadTexture(sdl_renderer, prefix_with_data_path("axis.png").c_str(), SDL_TRUE);
+	button = LoadTexture(sdl_renderer, prefix_with_data_path("/usr/share/amiberry/data/button.png").c_str(), SDL_TRUE);
+	axis = LoadTexture(sdl_renderer, prefix_with_data_path("/usr/share/amiberry/data/axis.png").c_str(), SDL_TRUE);
 #endif
 
 	/* Print info about the joystick we are watching */
diff --git a/src/osdep/gui/PanelAbout.cpp b/src/osdep/gui/PanelAbout.cpp
index 69ae6116..e599cd11 100644
--- a/src/osdep/gui/PanelAbout.cpp
+++ b/src/osdep/gui/PanelAbout.cpp
@@ -24,7 +24,7 @@ void InitPanelAbout(const config_category& category)
 	SDL_VERSION(&compiled);
 	SDL_GetVersion(&linked);
 	
-	amiberryLogoImage = gcn::Image::load(prefix_with_data_path("amiberry-logo.png"));
+	amiberryLogoImage = gcn::Image::load(prefix_with_data_path("/usr/share/amiberry/data/amiberry-logo.png"));
 	icon = new gcn::Icon(amiberryLogoImage);
 	lblEmulatorVersion = new gcn::Label(get_version_string());
 	lblCopyright = new gcn::Label("Copyright (C) 2016-2022 Dimitris Panokostas");
diff --git a/src/osdep/gui/PanelCustom.cpp b/src/osdep/gui/PanelCustom.cpp
index e0a75d27..9842dbc0 100644
--- a/src/osdep/gui/PanelCustom.cpp
+++ b/src/osdep/gui/PanelCustom.cpp
@@ -313,7 +313,7 @@ void InitPanelCustom(const config_category& category)
 	cmdSetHotkey->setSize(SMALL_BUTTON_WIDTH, SMALL_BUTTON_HEIGHT);
 	cmdSetHotkey->setBaseColor(gui_baseCol);
 	cmdSetHotkey->addActionListener(grpActionListener);
-	cmdSetHotkeyClear = new gcn::ImageButton(prefix_with_data_path("delete.png"));
+	cmdSetHotkeyClear = new gcn::ImageButton(prefix_with_data_path("/usr/share/amiberry/data/delete.png"));
 	cmdSetHotkeyClear->setBaseColor(gui_baseCol);
 	cmdSetHotkeyClear->setSize(SMALL_BUTTON_WIDTH, SMALL_BUTTON_HEIGHT);
 	cmdSetHotkeyClear->setId("cmdSetHotkeyClear");
diff --git a/src/osdep/gui/PanelDiskSwapper.cpp b/src/osdep/gui/PanelDiskSwapper.cpp
index 502123d7..a68c68e9 100644
--- a/src/osdep/gui/PanelDiskSwapper.cpp
+++ b/src/osdep/gui/PanelDiskSwapper.cpp
@@ -255,7 +255,7 @@ void InitPanelDiskSwapper(const config_category& category)
 		cmdDiskSwapperListAdd[row]->setId(tmp);
 		cmdDiskSwapperListAdd[row]->addActionListener(diskSwapperAddActionListener);
 
-		cmdDiskSwapperListDelete[row] = new gcn::ImageButton(prefix_with_data_path("delete.png"));
+		cmdDiskSwapperListDelete[row] = new gcn::ImageButton(prefix_with_data_path("/usr/share/amiberry/data/delete.png"));
 		cmdDiskSwapperListDelete[row]->setBaseColor(gui_baseCol);
 		cmdDiskSwapperListDelete[row]->setSize(SMALL_BUTTON_HEIGHT, SMALL_BUTTON_HEIGHT);
 		snprintf(tmp, 20, "cmdDiskSwapperDel%d", row);
diff --git a/src/osdep/gui/PanelHD.cpp b/src/osdep/gui/PanelHD.cpp
index 346567ff..5a08981d 100644
--- a/src/osdep/gui/PanelHD.cpp
+++ b/src/osdep/gui/PanelHD.cpp
@@ -357,7 +357,7 @@ void InitPanelHD(const config_category& category)
 		listCmdProps[row]->setId(id_string);
 		listCmdProps[row]->addActionListener(hdEditActionListener);
 
-		listCmdDelete[row] = new gcn::ImageButton(prefix_with_data_path("delete.png"));
+		listCmdDelete[row] = new gcn::ImageButton(prefix_with_data_path("/usr/share/amiberry/data/delete.png"));
 		listCmdDelete[row]->setBaseColor(gui_baseCol);
 		listCmdDelete[row]->setSize(SMALL_BUTTON_HEIGHT, SMALL_BUTTON_HEIGHT);
 		id_string = "cmdDel" + to_string(row);
diff --git a/src/osdep/gui/PanelMisc.cpp b/src/osdep/gui/PanelMisc.cpp
index b39319e2..decb4bdf 100644
--- a/src/osdep/gui/PanelMisc.cpp
+++ b/src/osdep/gui/PanelMisc.cpp
@@ -438,7 +438,7 @@ void InitPanelMisc(const config_category& category)
 	cmdKeyOpenGUI->setSize(SMALL_BUTTON_WIDTH, SMALL_BUTTON_HEIGHT);
 	cmdKeyOpenGUI->setBaseColor(gui_baseCol);
 	cmdKeyOpenGUI->addActionListener(miscActionListener);
-	cmdKeyOpenGUIClear = new gcn::ImageButton(prefix_with_data_path("delete.png"));
+	cmdKeyOpenGUIClear = new gcn::ImageButton(prefix_with_data_path("/usr/share/amiberry/data/delete.png"));
 	cmdKeyOpenGUIClear->setBaseColor(gui_baseCol);
 	cmdKeyOpenGUIClear->setSize(SMALL_BUTTON_WIDTH, SMALL_BUTTON_HEIGHT);
 	cmdKeyOpenGUIClear->setId("cmdKeyOpenGUIClear");
@@ -455,7 +455,7 @@ void InitPanelMisc(const config_category& category)
 	cmdKeyForQuit->setSize(SMALL_BUTTON_WIDTH, SMALL_BUTTON_HEIGHT);
 	cmdKeyForQuit->setBaseColor(gui_baseCol);
 	cmdKeyForQuit->addActionListener(miscActionListener);
-	cmdKeyForQuitClear = new gcn::ImageButton(prefix_with_data_path("delete.png"));
+	cmdKeyForQuitClear = new gcn::ImageButton(prefix_with_data_path("/usr/share/amiberry/data/delete.png"));
 	cmdKeyForQuitClear->setBaseColor(gui_baseCol);
 	cmdKeyForQuitClear->setSize(SMALL_BUTTON_WIDTH, SMALL_BUTTON_HEIGHT);
 	cmdKeyForQuitClear->setId("cmdKeyForQuitClear");
@@ -472,7 +472,7 @@ void InitPanelMisc(const config_category& category)
 	cmdKeyActionReplay->setSize(SMALL_BUTTON_WIDTH, SMALL_BUTTON_HEIGHT);
 	cmdKeyActionReplay->setBaseColor(gui_baseCol);
 	cmdKeyActionReplay->addActionListener(miscActionListener);
-	cmdKeyActionReplayClear = new gcn::ImageButton(prefix_with_data_path("delete.png"));
+	cmdKeyActionReplayClear = new gcn::ImageButton(prefix_with_data_path("/usr/share/amiberry/data/delete.png"));
 	cmdKeyActionReplayClear->setBaseColor(gui_baseCol);
 	cmdKeyActionReplayClear->setSize(SMALL_BUTTON_WIDTH, SMALL_BUTTON_HEIGHT);
 	cmdKeyActionReplayClear->setId("cmdKeyActionReplayClear");
@@ -489,7 +489,7 @@ void InitPanelMisc(const config_category& category)
 	cmdKeyFullScreen->setSize(SMALL_BUTTON_WIDTH, SMALL_BUTTON_HEIGHT);
 	cmdKeyFullScreen->setBaseColor(gui_baseCol);
 	cmdKeyFullScreen->addActionListener(miscActionListener);
-	cmdKeyFullScreenClear = new gcn::ImageButton(prefix_with_data_path("delete.png"));
+	cmdKeyFullScreenClear = new gcn::ImageButton(prefix_with_data_path("/usr/share/amiberry/data/delete.png"));
 	cmdKeyFullScreenClear->setBaseColor(gui_baseCol);
 	cmdKeyFullScreenClear->setSize(SMALL_BUTTON_WIDTH, SMALL_BUTTON_HEIGHT);
 	cmdKeyFullScreenClear->setId("cmdKeyFullScreenClear");
@@ -506,7 +506,7 @@ void InitPanelMisc(const config_category& category)
 	cmdKeyMinimize->setSize(SMALL_BUTTON_WIDTH, SMALL_BUTTON_HEIGHT);
 	cmdKeyMinimize->setBaseColor(gui_baseCol);
 	cmdKeyMinimize->addActionListener(miscActionListener);
-	cmdKeyMinimizeClear = new gcn::ImageButton(prefix_with_data_path("delete.png"));
+	cmdKeyMinimizeClear = new gcn::ImageButton(prefix_with_data_path("/usr/share/amiberry/data/delete.png"));
 	cmdKeyMinimizeClear->setBaseColor(gui_baseCol);
 	cmdKeyMinimizeClear->setSize(SMALL_BUTTON_WIDTH, SMALL_BUTTON_HEIGHT);
 	cmdKeyMinimizeClear->setId("cmdKeyMinimizeClear");
diff --git a/src/osdep/gui/ShowMessage.cpp b/src/osdep/gui/ShowMessage.cpp
index de7b5a31..b5889bc3 100644
--- a/src/osdep/gui/ShowMessage.cpp
+++ b/src/osdep/gui/ShowMessage.cpp
@@ -174,10 +174,10 @@ static void InitShowMessage(const std::string& message)
 	{
 		TTF_Init();
 #ifdef USE_OPENGL
-		gui_font = new gcn::ImageFont(prefix_with_data_path("fixedfont.bmp"), " abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789");
+		gui_font = new gcn::ImageFont(prefix_with_data_path("/usr/share/amiberry/data/fixedfont.bmp"), " abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789");
 
 #else
-		gui_font = new gcn::SDLTrueTypeFont(prefix_with_data_path("AmigaTopaz.ttf"), 15);
+		gui_font = new gcn::SDLTrueTypeFont(prefix_with_data_path("/usr/share/amiberry/data/AmigaTopaz.ttf"), 15);
 		gui_font->setAntiAlias(false);
 #endif
 		gcn::Widget::setGlobalFont(gui_font);
diff --git a/src/osdep/gui/main_window.cpp b/src/osdep/gui/main_window.cpp
index 0970d2aa..ec4b33c1 100644
--- a/src/osdep/gui/main_window.cpp
+++ b/src/osdep/gui/main_window.cpp
@@ -51,49 +51,49 @@ void target_startup_msg(const TCHAR* title, const TCHAR* msg)
 }
 
 ConfigCategory categories[] = {
-	{"About", "amigainfo.ico", nullptr, nullptr, InitPanelAbout, ExitPanelAbout, RefreshPanelAbout,
+	{"About", "/usr/share/amiberry/data/amigainfo.ico", nullptr, nullptr, InitPanelAbout, ExitPanelAbout, RefreshPanelAbout,
 		HelpPanelAbout
 	},
-	{"Paths", "paths.ico", nullptr, nullptr, InitPanelPaths, ExitPanelPaths, RefreshPanelPaths, HelpPanelPaths},
-	{"Quickstart", "quickstart.ico", nullptr, nullptr, InitPanelQuickstart, ExitPanelQuickstart,
+	{"Paths", "/usr/share/amiberry/data/paths.ico", nullptr, nullptr, InitPanelPaths, ExitPanelPaths, RefreshPanelPaths, HelpPanelPaths},
+	{"Quickstart", "/usr/share/amiberry/data/quickstart.ico", nullptr, nullptr, InitPanelQuickstart, ExitPanelQuickstart,
 		RefreshPanelQuickstart, HelpPanelQuickstart
 	},
-	{"Configurations", "file.ico", nullptr, nullptr, InitPanelConfig, ExitPanelConfig, RefreshPanelConfig,
+	{"Configurations", "/usr/share/amiberry/data/file.ico", nullptr, nullptr, InitPanelConfig, ExitPanelConfig, RefreshPanelConfig,
 		HelpPanelConfig
 	},
-	{"CPU and FPU", "cpu.ico", nullptr, nullptr, InitPanelCPU, ExitPanelCPU, RefreshPanelCPU, HelpPanelCPU},
-	{"Chipset", "cpu.ico", nullptr, nullptr, InitPanelChipset, ExitPanelChipset, RefreshPanelChipset,
+	{"CPU and FPU", "/usr/share/amiberry/data/cpu.ico", nullptr, nullptr, InitPanelCPU, ExitPanelCPU, RefreshPanelCPU, HelpPanelCPU},
+	{"Chipset", "/usr/share/amiberry/data/cpu.ico", nullptr, nullptr, InitPanelChipset, ExitPanelChipset, RefreshPanelChipset,
 		HelpPanelChipset
 	},
-	{"ROM", "chip.ico", nullptr, nullptr, InitPanelROM, ExitPanelROM, RefreshPanelROM, HelpPanelROM},
-	{"RAM", "chip.ico", nullptr, nullptr, InitPanelRAM, ExitPanelRAM, RefreshPanelRAM, HelpPanelRAM},
-	{"Floppy drives", "35floppy.ico", nullptr, nullptr, InitPanelFloppy, ExitPanelFloppy, RefreshPanelFloppy,
+	{"ROM", "/usr/share/amiberry/data/chip.ico", nullptr, nullptr, InitPanelROM, ExitPanelROM, RefreshPanelROM, HelpPanelROM},
+	{"RAM", "/usr/share/amiberry/data/chip.ico", nullptr, nullptr, InitPanelRAM, ExitPanelRAM, RefreshPanelRAM, HelpPanelRAM},
+	{"Floppy drives", "/usr/share/amiberry/data/35floppy.ico", nullptr, nullptr, InitPanelFloppy, ExitPanelFloppy, RefreshPanelFloppy,
 		HelpPanelFloppy
 	},
-	{"Hard drives/CD", "drive.ico", nullptr, nullptr, InitPanelHD, ExitPanelHD, RefreshPanelHD, HelpPanelHD},
-	{"Expansions", "expansion.ico", nullptr, nullptr, InitPanelExpansions, ExitPanelExpansions,
+	{"Hard drives/CD", "/usr/share/amiberry/data/drive.ico", nullptr, nullptr, InitPanelHD, ExitPanelHD, RefreshPanelHD, HelpPanelHD},
+	{"Expansions", "/usr/share/amiberry/data/expansion.ico", nullptr, nullptr, InitPanelExpansions, ExitPanelExpansions,
 		RefreshPanelExpansions, HelpPanelExpansions},
-	{"RTG board", "expansion.ico", nullptr, nullptr, InitPanelRTG, ExitPanelRTG,
+	{"RTG board", "/usr/share/amiberry/data/expansion.ico", nullptr, nullptr, InitPanelRTG, ExitPanelRTG,
 		RefreshPanelRTG, HelpPanelRTG
 	},
-	{"Hardware info", "expansion.ico", nullptr, nullptr, InitPanelHWInfo, ExitPanelHWInfo, RefreshPanelHWInfo, HelpPanelHWInfo},
-	{"Display", "screen.ico", nullptr, nullptr, InitPanelDisplay, ExitPanelDisplay, RefreshPanelDisplay,
+	{"Hardware info", "/usr/share/amiberry/data/expansion.ico", nullptr, nullptr, InitPanelHWInfo, ExitPanelHWInfo, RefreshPanelHWInfo, HelpPanelHWInfo},
+	{"Display", "/usr/share/amiberry/data/screen.ico", nullptr, nullptr, InitPanelDisplay, ExitPanelDisplay, RefreshPanelDisplay,
 		HelpPanelDisplay
 	},
-	{"Sound", "sound.ico", nullptr, nullptr, InitPanelSound, ExitPanelSound, RefreshPanelSound, HelpPanelSound},
-	{"Input", "joystick.ico", nullptr, nullptr, InitPanelInput, ExitPanelInput, RefreshPanelInput, HelpPanelInput},
-	{"IO Ports", "port.ico", nullptr, nullptr, InitPanelIO, ExitPanelIO, RefreshPanelIO, HelpPanelIO},
-	{"Custom controls", "controller.png", nullptr, nullptr, InitPanelCustom, ExitPanelCustom,
+	{"Sound", "/usr/share/amiberry/data/sound.ico", nullptr, nullptr, InitPanelSound, ExitPanelSound, RefreshPanelSound, HelpPanelSound},
+	{"Input", "/usr/share/amiberry/data/joystick.ico", nullptr, nullptr, InitPanelInput, ExitPanelInput, RefreshPanelInput, HelpPanelInput},
+	{"IO Ports", "/usr/share/amiberry/data/port.ico", nullptr, nullptr, InitPanelIO, ExitPanelIO, RefreshPanelIO, HelpPanelIO},
+	{"Custom controls", "/usr/share/amiberry/data/controller.png", nullptr, nullptr, InitPanelCustom, ExitPanelCustom,
 		RefreshPanelCustom, HelpPanelCustom
 	},
-	{"Disk swapper", "35floppy.ico", nullptr, nullptr, InitPanelDiskSwapper, ExitPanelDiskSwapper, RefreshPanelDiskSwapper, HelpPanelDiskSwapper},
-	{"Miscellaneous", "misc.ico", nullptr, nullptr, InitPanelMisc, ExitPanelMisc, RefreshPanelMisc, HelpPanelMisc},
-	{ "Priority", "misc.ico", nullptr, nullptr, InitPanelPrio, ExitPanelPrio, RefreshPanelPrio, HelpPanelPrio},
-	{"Savestates", "savestate.png", nullptr, nullptr, InitPanelSavestate, ExitPanelSavestate,
+	{"Disk swapper", "/usr/share/amiberry/data/35floppy.ico", nullptr, nullptr, InitPanelDiskSwapper, ExitPanelDiskSwapper, RefreshPanelDiskSwapper, HelpPanelDiskSwapper},
+	{"Miscellaneous", "/usr/share/amiberry/data/misc.ico", nullptr, nullptr, InitPanelMisc, ExitPanelMisc, RefreshPanelMisc, HelpPanelMisc},
+	{ "Priority", "/usr/share/amiberry/data/misc.ico", nullptr, nullptr, InitPanelPrio, ExitPanelPrio, RefreshPanelPrio, HelpPanelPrio},
+	{"Savestates", "/usr/share/amiberry/data/savestate.png", nullptr, nullptr, InitPanelSavestate, ExitPanelSavestate,
 		RefreshPanelSavestate, HelpPanelSavestate
 	},
 #ifdef ANDROID
-	{ "OnScreen",         "screen.ico",    NULL, NULL, InitPanelOnScreen,  ExitPanelOnScreen, RefreshPanelOnScreen,  HelpPanelOnScreen },
+	{ "OnScreen",         "/usr/share/amiberry/data/screen.ico",    NULL, NULL, InitPanelOnScreen,  ExitPanelOnScreen, RefreshPanelOnScreen,  HelpPanelOnScreen },
 #endif
 	{nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr}
 };
@@ -302,7 +302,7 @@ void update_gui_screen()
 #else
 void setup_cursor()
 {
-	cursor_surface = SDL_LoadBMP(prefix_with_data_path("cursor.bmp").c_str());
+	cursor_surface = SDL_LoadBMP(prefix_with_data_path("/usr/share/amiberry/data/cursor.bmp").c_str());
 	if (!cursor_surface)
 	{
 		// Load failed. Log error.
@@ -473,7 +473,7 @@ void amiberry_gui_init()
 			GUI_HEIGHT,
 			flags);
 
-		auto* const icon_surface = IMG_Load(prefix_with_data_path("amiberry.png").c_str());
+		auto* const icon_surface = IMG_Load(prefix_with_data_path("/usr/share/amiberry/data/amiberry.png").c_str());
 		if (icon_surface != nullptr)
 		{
 			SDL_SetWindowIcon(mon->sdl_window, icon_surface);
@@ -1218,9 +1218,9 @@ void gui_widgets_init()
 	try
 	{
 #ifdef USE_OPENGL
-		gui_font = new gcn::ImageFont(prefix_with_data_path("fixedfont.bmp"), " abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789");
+		gui_font = new gcn::ImageFont(prefix_with_data_path("/usr/share/amiberry/data/fixedfont.bmp"), " abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789");
 #else
-		gui_font = new gcn::SDLTrueTypeFont(prefix_with_data_path("AmigaTopaz.ttf"), 15);
+		gui_font = new gcn::SDLTrueTypeFont(prefix_with_data_path("/usr/share/amiberry/data/AmigaTopaz.ttf"), 15);
 #endif
 	}
 	catch (exception& ex)

author Rasmus Villemoes <linux@rasmusvillemoes.dk> 1523223328 +0200
committer Masahiro Yamada <yamada.masahiro@socionext.com> 1523372582 +0900

    Kbuild: fix # escaping in .cmd files for future Make
    
    I tried building using a freshly built Make (4.2.1-69-g8a731d1), but
    already the objtool build broke with
    
    orc_dump.c: In function ‘orc_dump’:
    orc_dump.c:106:2: error: ‘elf_getshnum’ is deprecated [-Werror=deprecated-declarations]
      if (elf_getshdrnum(elf, &nr_sections)) {
    
    Turns out that with that new Make, the backslash was not removed, so cpp
    didn't see a #include directive, grep found nothing, and
    -DLIBELF_USE_DEPRECATED was wrongly put in CFLAGS.
    
    Now, that new Make behaviour is documented in their NEWS file:
    
      * WARNING: Backward-incompatibility!
        Number signs (#) appearing inside a macro reference or function invocation
        no longer introduce comments and should not be escaped with backslashes:
        thus a call such as:
          foo := $(shell echo '#')
        is legal.  Previously the number sign needed to be escaped, for example:
          foo := $(shell echo '\#')
        Now this latter will resolve to "\#".  If you want to write makefiles
        portable to both versions, assign the number sign to a variable:
          C := \#
          foo := $(shell echo '$C')
        This was claimed to be fixed in 3.81, but wasn't, for some reason.
        To detect this change search for 'nocomment' in the .FEATURES variable.
    
    This also fixes up the two make-cmd instances to replace # with $(pound)
    rather than with \#. There might very well be other places that need
    similar fixup in preparation for whatever future Make release contains
    the above change, but at least this builds an x86_64 defconfig with the
    new make.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=197847
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>

diff --git a/scripts/Kbuild.include b/scripts/Kbuild.include
index cce31ee876b6..50cee534fd64 100644
--- a/scripts/Kbuild.include
+++ b/scripts/Kbuild.include
@@ -10,6 +10,7 @@ space   := $(empty) $(empty)
 squote  := '
 empty   :=
 space   := $(empty) $(empty)
+pound := \#
 
 ###
 # Name of target with a '.' as filename prefix. foo/bar.o => foo/.bar.o
@@ -322,11 +323,11 @@ endif
 
 # Replace >$< with >$$< to preserve $ when reloading the .cmd file
 # (needed for make)
-# Replace >#< with >\#< to avoid starting a comment in the .cmd file
+# Replace >#< with >$(pound)< to avoid starting a comment in the .cmd file
 # (needed for make)
 # Replace >'< with >'\''< to be able to enclose the whole string in '...'
 # (needed for the shell)
-make-cmd = $(call escsq,$(subst \#,\\\#,$(subst $$,$$$$,$(cmd_$(1)))))
+make-cmd = $(call escsq,$(subst $(pound),$$(pound),$(subst $$,$$$$,$(cmd_$(1)))))
 
 # Find any prerequisites that is newer than target or that does not exist.
 # PHONY targets skipped in both cases.

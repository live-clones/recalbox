From 47d2307a4df7629742ea2fa468e24724b5b6365a Mon Sep 17 00:00:00 2001
From: John Cox <jc@kynesim.co.uk>
Date: Fri, 8 Oct 2021 12:27:47 +0100
Subject: [PATCH 061/151] Remove frame pool from V4L2 req

Frame pool was attached to hw frame context so buffers were returned
s.t. they could only be attached to new frames so if we were waiting
for a buffer it would never turn up.  Also removing the pool means that
at close dmabufs can be freed individually as they return rather than
only in a lump when the context is finally freed.
---
 libavcodec/v4l2_req_hevc_vx.c  | 27 +++++++++++++++++++++++++--
 libavcodec/v4l2_request_hevc.c |  9 ++++++++-
 libavcodec/v4l2_request_hevc.h |  1 +
 3 files changed, 34 insertions(+), 3 deletions(-)

diff --git a/libavcodec/v4l2_req_hevc_vx.c b/libavcodec/v4l2_req_hevc_vx.c
index c9a8fa7c87..c9e8519ee9 100644
--- a/libavcodec/v4l2_req_hevc_vx.c
+++ b/libavcodec/v4l2_req_hevc_vx.c
@@ -1120,6 +1120,7 @@ static AVBufferRef *v4l2_req_frame_alloc(void *opaque, int size)
     return ref;
 }
 
+#if 0
 static void v4l2_req_pool_free(void *opaque)
 {
     av_log(NULL, AV_LOG_DEBUG, "%s: opaque=%p\n", __func__, opaque);
@@ -1131,6 +1132,7 @@ static void v4l2_req_hwframe_ctx_free(AVHWFramesContext *hwfc)
 
     av_buffer_pool_uninit(&hwfc->pool);
 }
+#endif
 
 static int frame_params(AVCodecContext *avctx, AVBufferRef *hw_frames_ctx)
 {
@@ -1147,7 +1149,7 @@ static int frame_params(AVCodecContext *avctx, AVBufferRef *hw_frames_ctx)
         hwfc->width = vfmt->fmt.pix.width;
         hwfc->height = vfmt->fmt.pix.height;
     }
-
+#if 0
     hwfc->pool = av_buffer_pool_init2(sizeof(V4L2MediaReqDescriptor), avctx, v4l2_req_frame_alloc, v4l2_req_pool_free);
     if (!hwfc->pool)
         return AVERROR(ENOMEM);
@@ -1166,12 +1168,32 @@ static int frame_params(AVCodecContext *avctx, AVBufferRef *hw_frames_ctx)
     default:
         hwfc->initial_pool_size += 2;
     }
-
+#endif
     av_log(avctx, AV_LOG_DEBUG, "%s: avctx=%p ctx=%p hw_frames_ctx=%p hwfc=%p pool=%p width=%d height=%d initial_pool_size=%d\n", __func__, avctx, ctx, hw_frames_ctx, hwfc, hwfc->pool, hwfc->width, hwfc->height, hwfc->initial_pool_size);
 
     return 0;
 }
 
+static int alloc_frame(AVCodecContext * avctx, AVFrame *frame)
+{
+    int rv;
+
+    frame->buf[0] = v4l2_req_frame_alloc(avctx, sizeof(V4L2MediaReqDescriptor));
+    if (!frame->buf[0])
+        return AVERROR(ENOMEM);
+
+    frame->data[0] = frame->buf[0]->data;
+
+    frame->hw_frames_ctx = av_buffer_ref(avctx->hw_frames_ctx);
+
+    if ((rv = ff_attach_decode_data(frame)) != 0) {
+        av_log(avctx, AV_LOG_ERROR, "Failed to attach decode data to frame\n");
+        av_frame_unref(frame);
+        return rv;
+    }
+
+    return 0;
+}
 
 const v4l2_req_decode_fns V(ff_v4l2_req_hevc) = {
     .src_pix_fmt_v4l2 = V4L2_PIX_FMT_HEVC_SLICE,
@@ -1184,5 +1206,6 @@ const v4l2_req_decode_fns V(ff_v4l2_req_hevc) = {
     .end_frame      = v4l2_request_hevc_end_frame,
     .abort_frame    = v4l2_request_hevc_abort_frame,
     .frame_params   = frame_params,
+    .alloc_frame    = alloc_frame,
 };
 
diff --git a/libavcodec/v4l2_request_hevc.c b/libavcodec/v4l2_request_hevc.c
index 02d81c7f7d..6830c5000d 100644
--- a/libavcodec/v4l2_request_hevc.c
+++ b/libavcodec/v4l2_request_hevc.c
@@ -85,6 +85,13 @@ static int v4l2_req_hevc_frame_params(AVCodecContext *avctx, AVBufferRef *hw_fra
     return ctx->fns->frame_params(avctx, hw_frames_ctx);
 }
 
+static int v4l2_req_hevc_alloc_frame(AVCodecContext * avctx, AVFrame *frame)
+{
+    V4L2RequestContextHEVC * const ctx = avctx->internal->hwaccel_priv_data;
+    return ctx->fns->alloc_frame(avctx, frame);
+}
+
+
 static int v4l2_request_hevc_uninit(AVCodecContext *avctx)
 {
     V4L2RequestContextHEVC * const ctx = avctx->internal->hwaccel_priv_data;
@@ -276,7 +283,7 @@ const AVHWAccel ff_hevc_v4l2request_hwaccel = {
     .type           = AVMEDIA_TYPE_VIDEO,
     .id             = AV_CODEC_ID_HEVC,
     .pix_fmt        = AV_PIX_FMT_DRM_PRIME,
-//    .alloc_frame    = v4l2_request_hevc_alloc_frame,
+    .alloc_frame    = v4l2_req_hevc_alloc_frame,
     .start_frame    = v4l2_req_hevc_start_frame,
     .decode_slice   = v4l2_req_hevc_decode_slice,
     .end_frame      = v4l2_req_hevc_end_frame,
diff --git a/libavcodec/v4l2_request_hevc.h b/libavcodec/v4l2_request_hevc.h
index 31ce4b8833..bee4c50fac 100644
--- a/libavcodec/v4l2_request_hevc.h
+++ b/libavcodec/v4l2_request_hevc.h
@@ -91,6 +91,7 @@ typedef struct v4l2_req_decode_fns {
     int (*end_frame)(AVCodecContext *avctx);
     void (*abort_frame)(AVCodecContext *avctx);
     int (*frame_params)(AVCodecContext *avctx, AVBufferRef *hw_frames_ctx);
+    int (*alloc_frame)(AVCodecContext * avctx, AVFrame *frame);
 } v4l2_req_decode_fns;
 
 
-- 
2.38.1

